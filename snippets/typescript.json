{
    "Explicit Startup Configuration": {
        "prefix": "au-bootstrapper",
        "body": [
            "import {LogManager} from 'aurelia-framework';",
            "import {ConsoleAppender} from 'aurelia-logging-console';",
            "import {Aurelia} from 'aurelia-framework';",
            "",
            "LogManager.addAppender(new ConsoleAppender());",
            "LogManager.setLevel(LogManager.logLevel.debug);",
            "",
            "export function configure(aurelia: Aurelia): void {",
            "\taurelia.use",
            "\t\t.defaultBindingLanguage()",
            "\t\t.defaultResources()",
            "\t\t.history()",
            "\t\t.router()",
            "\t\t.eventAggregator();",
            "",
            "\taurelia.start().then(()=>aurelia.setRoot('${app}',${document.body}));",
            "}"
        ],
        "description": "Aurelia explicit standard configuration export function snippet"
    },
    "Standard Startup Configuration": {
        "prefix": "au-configuration",
        "body": [
            "import {Aurelia} from 'aurelia-framework';",
            "",
            "export function configure(aurelia: Aurelia): void",
            "{",
            "\taurelia.use",
            "\t\t.standardConfiguration()",
            "\t\t.developmentLogging()",
            "",
            "aurelia.start().then(()=>aurelia.setRoot());",
            "}"
        ],
        "description": "Aurelia standard configuration export function snippet"
    },
    "Install Feature": {
        "prefix": "au-feature",
        "body": [
            ".feature('${feature-name}');"
        ],
        "description": "Aurelia install feature snippet"
    },
    "Install Plugin": {
        "prefix": "au-plugin",
        "body": [
            ".plugin('${plugin-name}', ${config} => { $0 });"
        ],
        "description": "Aurelia install plugin snippet"
    },
    "Creating Components Class": {
        "prefix": "au-useView",
        "body": [
            "import {useView} from 'aurelia-framework';",
            "",
            "@useView('./${name}.html')",
            "export class ${name} {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia creating new component snippet"
    },
    "Creating Components Lifecycle": {
        "prefix": "au-created",
        "body": [
            "created(${owningView}: View, ${myView}: View) {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia created function in component lifecycle snippet"
    },
    "Attached Components Lifecycle": {
        "prefix": "au-attached",
        "body": [
            "attached() {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia attached function in component lifecycle snippet"
    },
    "Detached Components Lifecycle": {
        "prefix": "au-detached",
        "body": [
            "detached() {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia detached function in component lifecycle snippet"
    },
    "Bind Components Lifecycle": {
        "prefix": "au-bind",
        "body": [
            "bind(${bindingContext}: Object,${overrideContext}: Object) {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia bind function in component lifecycle snippet"
    },
    "Unbind Components Lifecycle": {
        "prefix": "au-unbind",
        "body": [
            "unbind() {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia unbind function in component lifecycle snippet"
    },
    "Declaring Dependencies Decorator": {
        "prefix": "au-inject",
        "body": [
            "@autoinject"
        ],
        "description": "Aurelia declaring dependencies snippet"
    },
    "Using Lazy Resolver Decorator": {
        "prefix": "au-lazy",
        "body": [
            "@inject(Lazy.of(${dep}))"
        ],
        "description": "Aurelia using Lazy resolver snippet"
    },
    "Using All Resolver Decorator": {
        "prefix": "au-all",
        "body": [
            "@inject(All.of(${dep}))"
        ],
        "description": "Aurelia using All resolver snippet"
    },
    "Using Optional Resolver Decorator": {
        "prefix": "au-optional",
        "body": [
            "@inject(Optional.of(${dep}))"
        ],
        "description": "Aurelia using Optional resolver snippet"
    },
    "Explicit Transient Registration Decorator": {
        "prefix": "au-transient",
        "body": [
            "@transient()"
        ],
        "description": "Aurelia transient explicit registration snippet"
    },
    "Explicit Singleton Registration Decorator": {
        "prefix": "au-singleton",
        "body": [
            "@singleton()"
        ],
        "description": "Aurelia singleton explicit registration snippet"
    },
    "ContainerLess Templating Decorator": {
        "prefix": "au-containerless",
        "body": [
            "@containerless()"
        ],
        "description": "Aurelia containerLess Templating snippet"
    },
    "Computed Properties": {
        "prefix": "au-computed",
        "body": [
            "@computedFrom('${first}', '${two}')",
            "get ${full}(): string {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia declaring computed property dependencies snippet"
    },
    "Basic Route Configuration": {
        "prefix": "au-configureRouter",
        "body": [
            "import {RouterConfiguration, Router} from 'aurelia-router';",
            "",
            "export class ${App}() {",
            "\tconfigureRouter(config: RouterConfiguration, router: Router): void {",
            "\t\tthis.router = router;",
            "\t\tconfig.title = '${Title}';",
            "\t\tconfig.map([",
            "\t\t\t{ route: '${address}', name: '${name}', moduleId:'${url}', ${nav:true},  title:'${title}' }$0",
            "\t\t]);",
            "\t}",
            "}"
        ],
        "description": "Aurelia basic route configuration class snippet"
    },
    "CanActivate Screen Lifecycle": {
        "prefix": "au-canActivate",
        "body": [
            "canActivate(${params}, ${routeConfig}, $navigationInstruction) {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia canActivate screen lifecycle function snippet"
    },
    "Activate Screen Lifecycle": {
        "prefix": "au-activate",
        "body": [
            "activate(${params}, ${routeConfig}, $navigationInstruction) {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia activate screen lifecycle function snippet"
    },
    "CanDeactivate Screen Lifecycle": {
        "prefix": "au-canDeactivate",
        "body": [
            "canDeactivate() {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia canDeactivate screen lifecycle function snippet"
    },
    "Deactivate Screen Lifecycle": {
        "prefix": "au-deactivate",
        "body": [
            "deactivate() {",
            "\t$0",
            "}"
        ],
        "description": "Aurelia deactivate screen lifecycle function snippet"
    },
    "Determine Activation Strategy": {
        "prefix": "au-determineActivationStrategy",
        "body": [
            "determineActivationStrategy(): string {",
            "\t return activationStrategy.${replace}",
            "}"
        ],
        "description": "Aurelia determineActivationStrategy function snippet"
    },
    "Custom Attribute Decorator": {
        "prefix": "au-customAttribute",
        "body": [
            "@customAttribute(${name})"
        ],
        "description": "Aurelia determineActivationStrategy snippet"
    },
    "Custom Attribute Class": {
        "prefix": "au-customAttributeClass",
        "body": [
            "import {inject, customAttribute, DOM} from 'aurelia-framework';",
            "",
            "@customAttribute(${new-custom-attribute })",
            "@inject(DOM.Element)",
            "export class ${NewCustomAttribute} {",
            "\tconstructor(private element: Element) {",
            "\t\tthis.element = element;",
            "\t}",
            "",
            "valueChanged(newValue) {",
            "\tif (newValue) {",
            "\t\t$0",
            "}"
        ],
        "description": "Aurelia new customAttribute snippet"
    },
    "Value Changing Custom Attribute": {
        "prefix": "au-valueChanged",
        "body": [
            "valueChanged(newValue) {",
            "\tif (newValue) {",
            "\t\t$0",
            "}"
        ],
        "description": "Aurelia valueChanged function snippet"
    },
    "Custom Element Class": {
        "prefix": "au-customElementClass",
        "body": [
            "import {customElement, bindable} from 'aurelia-framework';",
            "",
            "@customElement(${new-element})",
            "export class ${NewElement} {",
            "\t @bindable to: any;",
            "",
            "${newFunction}(){$0}",
            "}"
        ],
        "description": "Aurelia new customElement snippet"
    },
    "Event Aggregator Subscribe": {
        "prefix": "au-subscribe",
        "body": [
            "subscribe(): void {",
            "\tthis.eventAggregator.subscribe(${some}, ${s} => {",
            "\t\t$0",
            "\t});",
            "}"
        ],
        "description": "Aurelia event aggregator subscribe function snippet"
    },
    "Value Converter": {
        "prefix": "au-valueConverter",
        "body": [
            "export class ${name}ValueConverter {",
            "\ttoView(${value}) {",
            "\t\treturn $0",
            "\t}",
            "}"
        ],
        "description": "Aurelia value converter snippet"
    }
}